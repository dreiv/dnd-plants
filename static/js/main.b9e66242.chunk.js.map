{"version":3,"sources":["components/filters/Filters.js","components/items/Items.js","App.js","index.js"],"names":["seasons","Filters","didMount","useRef","useState","season","setSeason","climate","setClimate","locale","setLocale","useContext","AppContext","data","climates","locales","setFilteredData","useEffect","current","filteredData","filter","item","value","onChange","target","map","s","idx","Items","renderItem","Object","entries","key","i","createContext","App","setData","setClimates","setLocales","Tabletop","init","simpleSheet","then","climatesTmp","localesTmp","forEach","keys","catch","console","warn","defaultContext","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9e66242.chunk.js","sourcesContent":["import React, { useRef, useEffect, useContext, useState } from \"react\";\n\nimport { AppContext } from \"../../App\";\nimport './Filters.css'\n\nconst seasons = [\"All Seasons\", \"Spring\", \"Summer\", \"Autumn\", \"Winter\"];\n\nexport function Filters() {\n  const didMount = useRef(false);\n  const [season, setSeason] = useState(seasons[0]);\n  const [climate, setClimate] = useState('All Climates');\n  const [locale, setLocale] = useState('All Locales');\n  const { data, climates = [], locales = [], setFilteredData } = useContext(AppContext);\n\n  useEffect(() => {\n    if (didMount.current) {\n      let filteredData = [...data];\n\n      if (season !== seasons[0]) {\n        filteredData = filteredData.filter((item) => item.season === season);\n      }\n\n      if (climate !== climates[0]) {\n        filteredData = filteredData.filter((item) => item.climate === climate);\n      }\n\n      if (locale !== locales[0]) {\n        filteredData = filteredData.filter((item) => item.locale === locale);\n      }\n\n      setFilteredData(filteredData);\n    } else didMount.current = true;\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [season, climate, locale]);\n\n  return (\n    <>\n      <h2>Filters:</h2>\n      <form>\n        <label>\n          Season\n          <br />\n          <select value={season} onChange={({ target: { value } }) => setSeason(value)}>\n            {seasons.map((s, idx) => (\n              <option key={idx} value={s}>{s}</option>\n            ))}\n          </select>\n        </label>\n\n        <label>\n          Climate\n          <br />\n          <select value={climate} onChange={({ target: { value } }) => setClimate(value)}>\n            {climates.map((s, idx) => (\n              <option key={idx} value={s}>{s}</option>\n            ))}\n          </select>\n        </label>\n\n        <label>\n          Locale\n          <br />\n          <select value={locale} onChange={({ target: { value } }) => setLocale(value)}>\n            {locales.map((s, idx) => (\n              <option key={idx} value={s}>{s}</option>\n            ))}\n          </select>\n        </label>\n      </form>\n    </>\n  );\n}\n","import React, { useContext, Fragment } from \"react\";\n\nimport { AppContext } from \"../../App\";\n\nexport function Items() {\n  const { filteredData } = useContext(AppContext);\n\n  const renderItem = (item) =>\n    Object.entries(item).map(([key, value], idx) => (\n      <li key={idx}>\n        {key} - {value}\n      </li>\n    ));\n\n  return (\n    <ul>\n      {filteredData.map((item, i) => (\n        <Fragment key={i}>\n          {renderItem(item)}\n          <br />\n        </Fragment>\n      ))}\n    </ul>\n  );\n}\n","import React, { createContext, useEffect, useState } from \"react\";\nimport Tabletop from \"tabletop\";\n\nimport { Filters, Items } from './components';\n\nexport const AppContext = createContext();\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [climates, setClimates] = useState(['Loading...']);\n  const [locales, setLocales] = useState(['Loading...']);\n\n  useEffect(() => {\n    Tabletop.init({\n      key: \"1joq6oGR_nb_mHa4-w2r-EC50qWim7mWvqiN_K1WxGRE\",\n      simpleSheet: true,\n    })\n      .then((data) => {\n        setData(data);\n        setFilteredData(data);\n\n        const climatesTmp = { 'All Climates': true };\n        const localesTmp = { 'All Locales': true };\n\n        data.forEach(item => {\n          climatesTmp[item.climate] = true\n          localesTmp[item.locale] = true\n        })\n\n        setClimates(Object.keys(climatesTmp));\n        setLocales(Object.keys(localesTmp));\n      })\n      .catch(console.warn);\n  }, []);\n\n  const defaultContext = {\n    data,\n    climates,\n    locales,\n    filteredData,\n    setFilteredData,\n  };\n\n  return (\n    <AppContext.Provider value={defaultContext}>\n      <Filters />\n      <Items />\n    </AppContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}