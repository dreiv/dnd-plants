{"version":3,"sources":["app-context/AppContext.js","app-context/actions/loadData.js","components/filters/Filters.js","components/items/Items.js","App.js","index.js"],"names":["AppStateContext","createContext","AppDispatchContext","appReducer","state","action","type","appTypes","loadData","data","climatesTmp","localesTmp","forEach","item","climate","locale","filteredData","climates","Object","keys","locales","filterData","Error","initialState","AppProvider","children","useReducer","dispatch","useEffect","Tabletop","init","key","simpleSheet","then","catch","console","warn","Provider","value","useAppState","context","useContext","undefined","seasons","Filters","useAppDispatch","didMount","useRef","useState","season","setSeason","setClimate","setLocale","current","filter","onChange","target","map","s","idx","Items","renderItem","entries","i","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ca50b71f.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from \"react\";\nimport Tabletop from \"tabletop\";\n\nimport { loadData } from \"./actions\";\n\nconst AppStateContext = createContext();\nconst AppDispatchContext = createContext();\n\nfunction appReducer(state, action) {\n  switch (action.type) {\n    case appTypes.loadData:\n      return loadData(state, action.data);\n    case appTypes.filterData:\n      const { filteredData } = action;\n\n      return {\n        ...state,\n        filteredData,\n      };\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n}\nconst appTypes = {\n  loadData: \"loadData\",\n  filterData: \"filterData\",\n};\n\nconst initialState = {\n  data: [],\n  filteredData: [],\n  climates: [\"All Climates\"],\n  locales: [\"All Locales\"],\n};\n\nfunction AppProvider({ children }) {\n  const [state, dispatch] = useReducer(appReducer, initialState);\n\n  useEffect(() => {\n    Tabletop.init({\n      key: \"1joq6oGR_nb_mHa4-w2r-EC50qWim7mWvqiN_K1WxGRE\",\n      simpleSheet: true,\n    })\n      .then((data) => {\n        dispatch({ type: appTypes.loadData, data });\n      })\n      .catch(console.warn);\n  }, []);\n\n  return (\n    <AppStateContext.Provider value={state}>\n      <AppDispatchContext.Provider value={dispatch}>\n        {children}\n      </AppDispatchContext.Provider>\n    </AppStateContext.Provider>\n  );\n}\n\nfunction useAppState() {\n  const context = useContext(AppStateContext);\n\n  if (context === undefined) {\n    throw new Error(\"useAppState must be used within a AppProvider\");\n  }\n  return context;\n}\n\nfunction useAppDispatch() {\n  const context = useContext(AppDispatchContext);\n\n  if (context === undefined) {\n    throw new Error(\"useAppDispatch must be used within a AppProvider\");\n  }\n  return context;\n}\n\nexport { AppProvider, useAppState, useAppDispatch, appTypes };\n","export function loadData(state, data) {\n  const climatesTmp = { \"All Climates\": true };\n  const localesTmp = { \"All Locales\": true };\n\n  data.forEach((item) => {\n    climatesTmp[item.climate] = true;\n    localesTmp[item.locale] = true;\n  });\n\n  return {\n    ...state,\n    data: data,\n    filteredData: data,\n    climates: Object.keys(climatesTmp),\n    locales: Object.keys(localesTmp),\n  };\n}\n","import React, { useRef, useEffect, useState } from \"react\";\n\nimport { useAppState, appTypes, useAppDispatch } from \"app-context\";\nimport \"./Filters.css\";\n\nconst seasons = [\"All Seasons\", \"Spring\", \"Summer\", \"Autumn\", \"Winter\"];\n\nexport function Filters() {\n  const dispatch = useAppDispatch();\n  const didMount = useRef(false);\n\n  const { data, climates, locales } = useAppState();\n  const [season, setSeason] = useState(seasons[0]);\n  const [climate, setClimate] = useState(climates[0]);\n  const [locale, setLocale] = useState(locales[0]);\n\n  useEffect(() => {\n    if (didMount.current) {\n      let filteredData = [...data];\n\n      if (season !== seasons[0]) {\n        filteredData = filteredData.filter((item) => item.season === season);\n      }\n\n      if (climate !== climates[0]) {\n        filteredData = filteredData.filter((item) => item.climate === climate);\n      }\n\n      if (locale !== locales[0]) {\n        filteredData = filteredData.filter((item) => item.locale === locale);\n      }\n\n      dispatch({ type: appTypes.filterData, filteredData });\n    } else didMount.current = true;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [season, climate, locale]);\n\n  return (\n    <form>\n      <label>\n        Season\n        <select\n          value={season}\n          onChange={({ target: { value } }) => setSeason(value)}\n        >\n          {seasons.map((s, idx) => (\n            <option key={idx} value={s}>\n              {s}\n            </option>\n          ))}\n        </select>\n      </label>\n\n      <label>\n        Climate\n        <select\n          value={climate}\n          onChange={({ target: { value } }) => setClimate(value)}\n        >\n          {climates.map((s, idx) => (\n            <option key={idx} value={s}>\n              {s}\n            </option>\n          ))}\n        </select>\n      </label>\n\n      <label>\n        Locale\n        <select\n          value={locale}\n          onChange={({ target: { value } }) => setLocale(value)}\n        >\n          {locales.map((s, idx) => (\n            <option key={idx} value={s}>\n              {s}\n            </option>\n          ))}\n        </select>\n      </label>\n    </form>\n  );\n}\n","import React, { Fragment } from \"react\";\n\nimport { useAppState } from \"app-context\";\n\nexport function Items() {\n  const { filteredData } = useAppState();\n\n  const renderItem = (item) =>\n    Object.entries(item).map(([key, value], idx) => (\n      <li key={idx}>\n        {key} - {value}\n      </li>\n    ));\n\n  return (\n    <ul>\n      {filteredData.map((item, i) => (\n        <Fragment key={i}>\n          {renderItem(item)}\n          <br />\n        </Fragment>\n      ))}\n    </ul>\n  );\n}\n","import React from \"react\";\n\nimport { Filters, Items } from \"./components\";\n\nfunction App() {\n  return (\n    <>\n      <Filters />\n      <Items />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { AppProvider } from \"./app-context\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}